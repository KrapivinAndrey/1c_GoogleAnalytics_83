Процедура ИнициализироватьПараметрыКлиентСервер(ОсновнаяФорма = Неопределено) Экспорт
	ПараметрыКлиентСервер = Новый Структура;
	
	ПараметрыКлиентСервер.Вставить("АдресаВХ");
	
	ПараметрыКлиентСервер.Вставить("ВерсияПлатформы1С");
	ПараметрыКлиентСервер.Вставить("ИмяКонфигурации1С");
	ПараметрыКлиентСервер.Вставить("НомерРелизаМодуля1С");
	
	ПараметрыКлиентСервер.Вставить("КэшироватьОбработкуОбъект");
	
	ПараметрыКлиентСервер.Вставить("ТипИспользуемыхФорм");
	ПараметрыКлиентСервер.Вставить("МодальностьЗапрещена");
	ПараметрыКлиентСервер.Вставить("ИспользоватьАсинхроннуюМодельРаботы");
	
	УникальныйИдентификатор	= ПолучитьУникальныйИдентификаторДляВХ(ОсновнаяФорма);
	
	АдресаВХ = Новый Структура;
	АдресаВХ.Вставить("СоединениеГугл",		ПоместитьВоВременноеХранилище(Неопределено, УникальныйИдентификатор));	//Структура с ключом Соединение
	АдресаВХ.Вставить("ОбработкаОбъект",	ПоместитьВоВременноеХранилище(Неопределено, УникальныйИдентификатор));	//Структура с одним элементом: ключ = "ОбработкаОбъект", значение	= объект [Внешняя]ОбработкаОбъект.КонтурСверкаВзаиморасчетов
	
	ПараметрыКлиентСервер.АдресаВХ					= АдресаВХ;
	
	ПараметрыКлиентСервер.ВерсияПлатформы1С			= ВерсияПлатформы1С();
	ПараметрыКлиентСервер.ИмяКонфигурации1С			= ИмяКонфигурации1С();
	ПараметрыКлиентСервер.НомерРелизаМодуля1С		= НомерРелизаМодуля1С();
	
	ПараметрыКлиентСервер.КэшироватьОбработкуОбъект	= ДоступноКэшированиеОбработкиОбъекта();
	
	ПараметрыКлиентСервер.ТипИспользуемыхФорм		= ТипИспользуемыхФорм(ОсновнаяФорма);
	ПараметрыКлиентСервер.МодальностьЗапрещена		= МодальностьЗапрещена();
КонецПроцедуры

Функция ПолучитьНомерРелиза() Экспорт
	               	
	Возврат "0.0.1b";
	
КонецФункции

Функция СтрокаСодержащаяРазрешенныеСимволы(Строка, РазрешенныеСимволы)
	
	//в параметре РазрешенныеСимволы буквы должны указываться в нижнем регистре
	
	Результат = ""; 
		
	ДлинаСтроки = СтрДлина(Строка);
	Для К = 1 По ДлинаСтроки Цикл
		Символ = Прав(Лев(Строка,К),1);
		НРегСимвол = НРег(Символ);
		СимволРазрешен = ( Найти(РазрешенныеСимволы,НРегСимвол) > 0 );
		Если СимволРазрешен Тогда
			Результат = Результат + Символ;			
		КонецЕсли;
	КонецЦикла;
				
	Возврат Результат;
	
КонецФункции

//ИНИЦИАЛИЗАЦИЯ ПАРАМЕТРОВ{
Функция ВерсияПлатформы1С()
	
	Результат = "";

	Попытка
		СистемнаяИнформация = Новый СистемнаяИнформация;
		Результат = СистемнаяИнформация.ВерсияПриложения;
	Исключение
		_ОписаниеОшибки = ОписаниеОшибки();	
	КонецПопытки;	
		
	Возврат Результат;	
	
КонецФункции

Функция ИмяКонфигурации1С()
	Имя = "";
	Попытка
		Имя = Метаданные.Имя;
	Исключение
		_ОписаниеОшибки = ОписаниеОшибки();	
	КонецПопытки;
	Возврат Имя;

КонецФункции

Функция НомерРелизаМодуля1С()
	
	РазрешенныеСимволы = "0123456789.bk";
	НомерРелиза = ПолучитьНомерРелиза();
	
	Возврат СтрокаСодержащаяРазрешенныеСимволы(НомерРелиза, РазрешенныеСимволы);	
	
КонецФункции

Функция ДоступноКэшированиеОбработкиОбъекта()
	
	Результат = Ложь;
	
	ВременныйУникальныйИдентификатор = Новый УникальныйИдентификатор;
	АдресВХ = ПоместитьВоВременноеХранилище(Неопределено, ВременныйУникальныйИдентификатор);
	
	Попытка
		ОбработкаОбъектВКэш(ЭтотОбъект, АдресВХ);
	    ОбработкаОбъект = ОбработкаОбъектИзКэша(АдресВХ);
		Если Найти(Строка(ОбработкаОбъект),"ОбработкаОбъект") > 0 Тогда
			Результат = Истина;		
		КонецЕсли;
		УдалитьИзВременногоХранилища(АдресВХ);
	Исключение
		_ОписаниеОшибки = ОписаниеОшибки();
	КонецПопытки;	
		
	Возврат Результат;
	
КонецФункции

Функция ТипИспользуемыхФорм(Форма)
	
	Результат = Ложь;
	
	Если ТипЗнч(Форма) = Тип("УправляемаяФорма") Тогда
		Результат = "Управляемые";
	Иначе
		Результат = "Обычные";
	КонецЕсли;
	
	Возврат Результат;	
	
КонецФункции

Функция МодальностьЗапрещена()
	
	СисИнфо = Новый СистемнаяИнформация;
	ТекВерсияПлатформы = СисИнфо.ВерсияПриложения;
	Остаток = Сред(СокрЛП(ТекВерсияПлатформы),3);
	ВтораяЦифраВерсии = Число(Лев(Остаток,1)); //скорее всего 8.10.х не будет
	Остаток = Сред(СокрЛП(Остаток),3);
	ТретьяЦифраВерсии = Число(Лев(Остаток,Найти(Остаток,".")-1));
	
	Если (ВтораяЦифраВерсии = 3 и ТретьяЦифраВерсии >= 4) или ВтораяЦифраВерсии > 3 Тогда 
		Попытка
			Если Строка(Метаданные.РежимИспользованияМодальности)  = "Использовать" Тогда 
				Возврат Ложь;
			Иначе
				Возврат Истина;
			КонецЕсли;
		Исключение
			//платфома не в курсе что есть режим отказа от модальности
			Возврат Ложь;
		КонецПопытки;
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции
//}

//РАБОТА С ВРЕМЕННЫМ ХРАНИЛИЩЕМ {
Процедура ПоместитьВоВХ(Имя,Значение) Экспорт
	
	ПоместитьВоВременноеХранилище(Значение, ПараметрыКлиентСервер.АдресаВХ[Имя]);
				
КонецПроцедуры

Функция ИзвлечьИзВХ(Имя) Экспорт
	
	АдресВХ = ПараметрыКлиентСервер.АдресаВХ[Имя];
	
	Если Не ЭтоАдресВременногоХранилища(АдресВХ) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Возврат ПолучитьИзВременногоХранилища(АдресВХ);
			
КонецФункции

Функция ПолучитьУникальныйИдентификаторДляВХ(ОсновнаяФорма)
	
	УникальныйИдентификатор = Новый УникальныйИдентификатор;
	
	Если ТипЗнч(ОсновнаяФорма) = Тип("УправляемаяФорма") Тогда
		УникальныйИдентификатор = ОсновнаяФорма.УникальныйИдентификатор;
	КонецЕсли;
	
	Возврат УникальныйИдентификатор;
	
КонецФункции

Процедура ОбработкаОбъектВКэш(ОбработкаОбъект, АдресВХ)
	
	ПоместитьВоВременноеХранилище(Новый Структура("ОбработкаОбъект",ОбработкаОбъект), АдресВХ);
	
КонецПроцедуры

Функция ОбработкаОбъектИзКэша(АдресВХ)
	
	Результат = Неопределено;
	
	Если ЭтоАдресВременногоХранилища(АдресВХ) Тогда
		Структура = ПолучитьИзВременногоХранилища(АдресВХ);
		Если ТипЗнч(Структура) = Тип("Структура") и Структура.Свойство("ОбработкаОбъект") Тогда
		 	Результат = Структура.ОбработкаОбъект;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

//}
